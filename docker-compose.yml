services:

  # ----------------------------------------------------
  # 1. LLM Server: Ollama
  # ----------------------------------------------------
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped

  # ----------------------------------------------------
  # 2. Base de Datos: MariaDB
  # ----------------------------------------------------
  mariadb:
    image: mariadb:11.4
    container_name: mariadb
    environment:
      # Las credenciales deben ser reemplazadas o cargadas desde un .env
      MARIADB_ROOT_PASSWORD: MyStrongRootPassword
      MARIADB_DATABASE: app_db
      MARIADB_USER: app_user
      MARIADB_PASSWORD: MyStrongAppPassword
    volumes:
      - mariadb_data:/var/lib/mysql
    expose:
      - "3306:3306"
    restart: unless-stopped

    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

#   # ----------------------------------------------------
#   # 3. Backend API: ASP.NET Core
#   # ----------------------------------------------------
#   backend:
#     build:
#       context: .src/backend  # Ruta a la carpeta de tu proyecto .NET/Dockerfile
#       dockerfile: Dockerfile
#     container_name: backend
#     ports:
#       # Mapea el puerto del host al puerto del contenedor (e.g., Kestrel 8080)
#       - "8080:8080"
#     environment:
#       # Configuraciones de conexión a MariaDB y Ollama
#       ASPNETCORE_ENVIRONMENT: Development
#       DB_CONNECTION_HOST: mariadb  # Usa el nombre del servicio
#       DB_CONNECTION_USER: app_user
#       DB_CONNECTION_PASS: MyStrongAppPassword
#       DB_CONNECTION_DB: app_db
#       OLLAMA_HOST: http://ollama:11434 # Usa el nombre del servicio y el puerto interno
#     depends_on:
#       # Asegura que MariaDB esté listo antes de iniciar el backend
#       mariadb:
#         condition: service_healthy
#       ollama:
#         condition: service_started
#     restart: unless-stopped

#   # ----------------------------------------------------
#   # 4. Frontend: React
#   # ----------------------------------------------------
#   frontend:
#     build:
#       context: .src/frontend # Ruta a la carpeta de tu proyecto React/Dockerfile
#       dockerfile: Dockerfile
#     container_name: frontend
#     ports:
#       # Mapea el puerto 3000 del host al puerto 80 del contenedor (servidor Nginx/React)
#       - "3000:80" 
#     environment:
#       # Define la URL de tu API para que el frontend pueda llamarla
#       REACT_APP_API_URL: http://localhost:8080 # O la URL final si es para producción
#     depends_on:
#       - backend
#     restart: unless-stopped



# # ----------------------------------------------------
# # Volúmenes para persistencia
# # ----------------------------------------------------
volumes:
  mariadb_data:
  ollama_data: